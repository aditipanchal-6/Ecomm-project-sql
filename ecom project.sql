DROP TABLE IF EXISTS sales_target;
CREATE TABLE sales_target (
    Month_Order TEXT,
    Category TEXT,
    Target NUMERIC
);
DROP TABLE IF EXISTS orders;
CREATE TABLE orders (
    Order_ID VARCHAR(30) PRIMARY KEY,
    Order_Date DATE,
    Customer_Name TEXT,
    State TEXT,
    City TEXT,
    Age INT
);
DROP TABLE IF EXISTS order_details;
CREATE TABLE order_details (
    Order_ID VARCHAR(30),
    Amount NUMERIC,
    Profit NUMERIC,
    Quantity INT,
    Category TEXT,
    Sub_Category TEXT
);
--Data exploration

SELECT COUNT(*) FROM sales_target;
SELECT COUNT(*) FROM orders;
SELECT COUNT(*) FROM order_details;

SELECT * FROM sales_target ;
SELECT * FROM orders;
SELECT * FROM order_details;

SELECT DISTINCT category FROM order_details;
SELECT DISTINCT sub_category FROM order_details;
SELECT DISTINCT category FROM sales_target;

-- Total Qty products sold 
SELECT SUM(Quantity) AS Total_Quantity 
FROM order_details;

-- Total sales, profit and avg_price
SELECT SUM(amount) AS total_sales, SUM(profit) AS Total_Profit,AVG(Amount) AS AveragePrice
FROM order_details;

--Distinct Customers 
SELECT COUNT(DISTINCT customer_name) AS unique_customers
FROM orders;

--Earliest and lastorder date
SELECT MIN(order_date) AS first_order, MAX(order_date) AS last_order
FROM orders;

---Average Order Value
SELECT ROUND(SUM(d.amount) / COUNT(DISTINCT o.order_id), 2) AS avg_order_value
FROM orders o
JOIN order_details d ON o.order_id = d.order_id;

--Total Revenue generated by store
WITH cte_SP AS 
(SELECT Order_ID AS order_id,Category, (Amount * Quantity) + profit AS SellPrice
FROM order_details) 
SELECT SUM(SellPrice) as Total_Revenue 
FROM cte_SP ;

--Total revenue per Category
WITH cte_SP AS 
(SELECT Order_ID AS order_id,Category, (Amount * Quantity) + profit AS SellPrice
FROM order_details) 
SELECT category, SUM(SellPrice) AS Revenue 
FROM cte_SP 
GROUP BY Category;

--1)How do sales change month by month?
SELECT 
TO_CHAR(o.Order_Date, 'YYYY-MM') AS month,
ROUND(SUM(d.Amount), 2) AS total_sales
FROM orders o
JOIN order_details d ON o.Order_ID = d.Order_ID
GROUP BY month
ORDER BY month;

--2)Which product categories sell the most?
SELECT Category,
ROUND(SUM(Amount),2) AS total_sales
FROM order_details
GROUP BY Category
ORDER BY total_sales DESC
LIMIT 5;

--3)Which product subcategories sell the most?
SELECT Sub_Category,ROUND(SUM(Amount),2) AS total_sales
FROM order_details
GROUP BY Sub_Category
ORDER BY total_sales DESC;

--4)State-wise performance: who orders the most vs who spends the most?
SELECT 
o.State,
COUNT(DISTINCT o.Order_ID) AS total_orders,
ROUND(SUM(d.Amount), 2) AS total_sales,
ROUND(SUM(d.Amount) / COUNT(DISTINCT o.Order_ID), 2) AS avg_order_value
FROM orders o
JOIN order_details d ON o.Order_ID = d.Order_ID
GROUP BY o.State
ORDER BY total_sales DESC;

--5)Which product subcategories are unprofitable despite generating sales?
SELECT Sub_Category,
ROUND(SUM(Amount), 2) AS total_sales,
ROUND(SUM(Profit), 2) AS total_profit
FROM order_details
GROUP BY Sub_Category
HAVING SUM(Profit) < 0
ORDER BY total_profit ASC;

--6)What is the Profit Margin for each subcategory?
SELECT 
Sub_Category,
ROUND(SUM(Profit) * 100.0 / SUM(Amount), 2) AS profit_margin
FROM order_details
GROUP BY Sub_Category
ORDER BY profit_margin ASC;

--7)Which states are losing money?( to identify geographic risk zones)
SELECT 
o.State,
ROUND(SUM(d.Amount), 2) AS total_sales,
ROUND(SUM(d.Profit), 2) AS total_profit
FROM orders o
JOIN order_details d ON o.Order_ID = d.Order_ID
GROUP BY o.State
HAVING SUM(d.Profit) < 0
ORDER BY total_profit ASC;

--8) Which customers should we retain, and which ones are loss-making?
SELECT 
o.Customer_Name,
SUM(d.Amount) AS lifetime_sales,
SUM(d.Profit) AS lifetime_profit,
ROUND(SUM(d.Profit) * 100.0 / NULLIF(SUM(d.Amount), 0), 2) AS profit_margin_pct
FROM orders o
JOIN order_details d ON o.Order_ID = d.Order_ID
GROUP BY o.Customer_Name
ORDER BY lifetime_profit DESC;

--9)Customer Segmentation by Profitability
WITH customer_perf AS (
SELECT o.Customer_Name,
SUM(d.Amount) AS total_sales,
SUM(d.Profit) AS total_profit,
ROUND(AVG(d.Profit),2) AS avg_profit_per_order
FROM orders o
JOIN order_details d ON o.Order_ID = d.Order_ID
GROUP BY o.Customer_Name
)
SELECT Customer_Name,total_sales,total_profit,
CASE WHEN total_profit > 200 THEN 'High Value'
WHEN total_profit BETWEEN 0 AND 200 THEN 'Moderate Value'
ELSE 'Loss Making'END AS customer_segment
FROM customer_perf
ORDER BY total_profit DESC;

--10)Months with Highest Loss vs Highest Profit?
SELECT 
    TO_CHAR(Order_Date,'Mon-YYYY') AS month,
    SUM(d.Profit) AS total_profit
FROM orders o
JOIN order_details d ON o.Order_ID = d.Order_ID
GROUP BY month
ORDER BY total_profit ASC; 

--11)How profit accumulates month to month?
SELECT month,
       SUM(total_profit) OVER (ORDER BY month) AS cumulative_profit
FROM (
    SELECT TO_CHAR(Order_Date,'YYYY-MM') AS month, SUM(d.Profit) AS total_profit
    FROM orders o
    JOIN order_details d ON o.Order_ID = d.Order_ID
    GROUP BY month
) t
ORDER BY month;

--12)Underperforming Sub-Categories Relative to Category Average?
WITH category_avg AS (
    SELECT Category, AVG(Profit) AS avg_profit
    FROM order_details
    GROUP BY Category
)
SELECT d.Sub_Category, d.Category, SUM(d.Profit) AS sub_total_profit, c.avg_profit
FROM order_details d
JOIN category_avg c ON d.Category = c.Category
GROUP BY d.Sub_Category, d.Category, c.avg_profit
HAVING SUM(d.Profit) < c.avg_profit
ORDER BY sub_total_profit ASC;


